1. Faça um programa que leia 2 números, some-os e exiba uma mensagem com o resultado apenas se o resultado for maior que 100.

2. Escreva um programa que calcule e mostre a tabuada (até 10x) de um número qualquer, digitado pelo usuário.

3. Faça um programa que leia um vetor numérico de 10 posições. Depois, ordene o vetor em ordem crescente e apresente os elementos ordenados.

4. Escreva um programa que leia dois números e apresente um menu de opções como o mostrado abaixo:
Escolha a opção: A- Soma de 2 números. B- Diferença entre 2 números (maior pelo menor).
C- Produto entre 2 números. D- Divisão entre 2 números (o denominador não pode ser zero).
Leia a opção do usuário e execute a operação com os dois números lidos anteriormente.
Caso a opção digitada seja inválida, apresente a mensagem de “Opção inválida” para o usuário. Lembre-se de usar funções para organizar seu programa.

5. Uma eleição possui 2 candidatos a prefeito: o candidato José, do Partido da Felicidade e o candidato João, do Partido da Esperança. Os eleitores votam nos candidatos pelo número do partido. Para votar no candidato José do Partido da Felicidade, precisam digitar o número 1. Para votar no candidato João, do Partido da Esperança, precisam digitar o número 2.
Faça um programa que simule uma urna eletrônica. Para cada eleitor, deve ser lido o número do seu título e em seguida o eleitor poderá digitar o seu voto. A eleição é encerrada quando um valor negativo (menor do que 0) para o título do eleitor é digitado. Informe quantos votos cada candidato teve e qual deles ganhou a eleição.

6. Faça um programa que peça ao usuário uma temperatura em Fahrenheit, converta-a para graus Celsius e escreva o novo valor na tela.
A fórmula de conversão de Fahrenheit (F) para Celsius é C = ( ( F - 32 ) * 5 ) / 9. Exemplo: 100 Fahrenheit = 37,77 Celsius.

7. Para um jogo, precisamos saber se um personagem morreu ou não depois de sofrer um ataque. Faça uma função que receba 2 parâmetros,
DANO e SAUDE. A função deve retornar verdadeiro se o dano for matar o personagem (ou seja, deixar sua saúde menor ou igual a zero) e falso caso contrário.

8. Temos um vetor de 5 posições, com o nome de 5 itens que nosso herói carrega na mochila.
Quando o personagem chega numa porta, queremos detectar automaticamente se ele tem o não uma chave para deixá-lo passar.
Crie uma função TemChave que percorre o vetor comparando se cada item tem o nome “chave” e retorne verdadeiro se encontrar alguma.
Caso contrário, a função deve retornar falso.

9. Precisamos limitar as posições em que um inimigo pode andar na tela.
A menor posição possível é 0 e a maior, 100: qualquer valor maior que 100 ou menor que 0 sairia fora da tela. Precisamos de uma função LimitaPosicao que recebe uma POSICAO que pode ter qualquer valor positivo ou negativo, verifica se ela é válida ou não e retorna sempre um valor corrigido entre 0 e 100.

10. Crie uma classe de objeto, usando uma função construtora, chamada Carta.
A função construtora recebe os parâmetros pNumero e pNaipe, que são guardados nos atributos numero e naipe. Esse objeto também tem o método exibir(), que mostra as informações da carta na tela de maneira legível (ex. “7 de paus”).

11. Usando a classe Carta criada anteriormente, faça um programa que tenta adivinhar uma carta que o jogador está pensando.
Como? No início, o computador dá uma instrução: “Pense numa carta do baralho.” Depois, mostra (usando o método exibir() da carta)
cartas aleatórias uma de cada vez para o jogador, que deve responder S (sim) ou N (não) se aquela era a carta desejada. O jogo acaba quando o computador acertar a carta pensada pelo jogador e mostrar uma mensagem comemorando.
Lembrete: a função para gerar números aleatórios em JavaScript é Math.random().
Olhe o jogo-didático criado em sala para ver um exemplo de como usá-la.

12. Crie um game de jo-ken-po. A cada rodada, o jogador vê o menu:
Escolha sua jogada: 1 - Papel 2 - Pedra 3 - Tesoura
O jogo lê a opção do jogador e verifica se é válida. Se for inválida, o jogador perde a rodada e o jogo acaba. Se for válida, 
o computador escolhe uma resposta aleatória, que é mostrada ao jogador. Se o jogador ganhar, ele pode jogar mais uma rodada e sua pontuação aumenta. 
O jogo acaba quando o jogador perde uma rodada. A pontuação total é mostrada no fim do jogo.
